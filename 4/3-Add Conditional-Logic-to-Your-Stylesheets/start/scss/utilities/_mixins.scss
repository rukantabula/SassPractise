// =========================================
//  Mixins
// =========================================

// Slanted effect
@mixin skewed {
  position: relative;
  &::after {
    content: '';
    display: block;
    width: 100%;
    height: 50px; 
    position: absolute;
    transform: skewY(-2deg);
    @content;
  }
}

// Center containers
@mixin center($w) {
  width: $w;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
}

// Rounded elements
@mixin roundy($dim, $brdr: null) {
  width: $dim;
  height: $dim;
  border: $brdr;
  border-radius: 50%;
}
  
// Create a flex container
@mixin flexy(
  $disp: flex,
  $dir: null,
  $wrap: null,
  $just: null) {
  display: $disp;
  flex-direction: $dir;
  flex-wrap: $wrap;
  justify-content: $just;
}

// media queries

@mixin mq ($break) {
  $value: map-get($map: $breakpoints, $key: $break);
  $sm: map-get($map: $breakpoints, $key: 'sm');
  
  @if $value < $sm {
    @media (max-width : $value){
      @content;
    }
  } 

  @else {
    @media (min-width : $value){
      @content;
    }
  }

  /*
  @if $break == 'xs' {
    @media (max-width :map-get($map: $breakpoints, $key: 'xs')){
      @content;
    }
  }
  @else if $break == 'sm' {
    @media (max-width: $break-s){
      @content;
    }
  }
  @else if $break == 'med' {
    @media (max-width: $break-m){
      @content;
    }
  }
  @else if $break == 'lg' {
    @media (max-width: $break-l){
      @content;
    }
  }*/
}









